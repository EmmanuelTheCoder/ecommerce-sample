[{"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\context.js":"2","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\App.js":"3","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\reportWebVitals.js":"4","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\data.js":"5","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Details.js":"6","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\ProductMenu.js":"7","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Cart.js":"8","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Navbar.js":"9","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Modal.js":"10","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\cartItems.js":"11","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Product.js":"12","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Button.js":"13"},{"size":1011,"mtime":1652866229857,"results":"14","hashOfConfig":"15"},{"size":8386,"mtime":1656188219941,"results":"16","hashOfConfig":"15"},{"size":792,"mtime":1644848957511,"results":"17","hashOfConfig":"15"},{"size":375,"mtime":1644848957527,"results":"18","hashOfConfig":"15"},{"size":5161,"mtime":1648203557279,"results":"19","hashOfConfig":"15"},{"size":4083,"mtime":1648216620194,"results":"20","hashOfConfig":"15"},{"size":594,"mtime":1651156855021,"results":"21","hashOfConfig":"15"},{"size":549,"mtime":1648221531393,"results":"22","hashOfConfig":"15"},{"size":1217,"mtime":1656150747300,"results":"23","hashOfConfig":"15"},{"size":2906,"mtime":1648216732591,"results":"24","hashOfConfig":"15"},{"size":2610,"mtime":1656185418227,"results":"25","hashOfConfig":"15"},{"size":3247,"mtime":1648216641629,"results":"26","hashOfConfig":"15"},{"size":512,"mtime":1644848957515,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11xgzv2",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\index.js",[],["57","58"],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\context.js",["59","60"],"import React, {createContext, useCallback, \r\n    useEffect, useState} from 'react';\r\n//import {storeProducts, detailProduct} from './data';\r\nimport {useVisitorData} from '@fingerprintjs/fingerprintjs-pro-react'\r\n\r\nexport const ProductContext = createContext();\r\n\r\n\r\nconst ProductProvider = ({children}) => {\r\n\r\n    const {getData} = useVisitorData()\r\n \r\n \r\n    const [getProduct, setGetProduct] = useState({\r\n    \r\n        products: [],\r\n        detailProduct: {},\r\n        cart: [],\r\n        modalOpen: false,\r\n        modalProduct: {},\r\n        sumTotal: 0\r\n        \r\n    });\r\n\r\n    const [visitorId, setVisitorId] = useState()\r\n    const fetchDataFromServer = useCallback(()=>{\r\n\r\n    fetch(\"http://localhost:8000/data\")\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        setGetProduct(() => {\r\n            return {products: data.storeProducts, \r\n                detailProduct: data.detailProduct, modalProduct: \r\n                data.detailProduct,\r\n                cart: [],\r\n                sumTotal: 0,\r\n                modalOpen: false\r\n            }\r\n        })\r\n       \r\n    })\r\n},[])\r\n\r\nuseEffect(() =>{\r\n        \r\n    //fetchDataFromServer()\r\n     \r\n }, []);\r\n   \r\n\r\n //send generated visitorId to the server\r\n const sendVisitorIdToServer = useCallback(() =>{\r\n    fetch(\"http://localhost:8000/users\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type' : 'application/json',\r\n            'Accept' : 'application/json'\r\n        }, \r\n        body: JSON.stringify({\r\n            visitorId: visitorId\r\n        }) \r\n    })\r\n    .then(res => res.json())\r\n    .then(data => console.log(data))\r\n    \r\n\r\n },[visitorId])\r\n\r\n\r\n \r\n//generate unique visitorId using fingerprints the call the func that\r\n//sends it to the server\r\n useEffect(() =>{\r\n    getData().then(data =>{\r\n             \r\n        if(data){\r\n            const dataId = data.visitorId\r\n            setVisitorId(dataId)\r\n            \r\n        }\r\n\r\n    })\r\n\r\n    visitorId && sendVisitorIdToServer()\r\n    \r\n    \r\n}, [visitorId, sendVisitorIdToServer, getData])\r\n\r\n\r\n\r\n\r\n\r\n \r\n const retrieveCartFromServer = () =>{\r\n    fetch(\"http://localhost:8000/cart/findcart\", {\r\n        method: \"POST\",\r\n        headers:{\r\n            'Accept': \"application/json\",\r\n            'Content-Type': \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            visitorId: visitorId\r\n        })\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        console.log(\"cart item\", data)\r\n        return setGetProduct(() => {\r\n            return {\r\n                products: data.storeProducts, \r\n                detailProduct: data.detailProduct, \r\n                modalProduct: data.detailProduct,\r\n                cart: data.collectCart,\r\n                sumTotal: 0,\r\n                modalOpen: false\r\n            }\r\n        })\r\n    })\r\n }\r\n\r\n useEffect(() =>{\r\n    retrieveCartFromServer()\r\n }, [])\r\n\r\n //The 'retrieveCartFromServer' function makes the dependencies of useEffect Hook (at line 123) change on every render.\r\n // Move it inside the useEffect callback. Alternatively, wrap the definition of 'retrieveCartFromServer' in its own useCallback() Hook\r\n\r\n\r\n\r\n\r\n const sendCartItemToServer = (product, tempProducts) =>{\r\n     \r\n    fetch(\"http://localhost:8000/cart\", {\r\n        method: 'POST',\r\n        \r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            cart: product,\r\n            visitorId: visitorId\r\n        })\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        //return {...getProduct, products: tempProducts, cart: [...getProduct.cart, product]}\r\n        return setGetProduct(() =>{\r\n            return {...getProduct, products: tempProducts, cart: [...getProduct.cart, data]}\r\n        })\r\n    })\r\n\r\n }\r\n\r\n \r\n\r\nconst getItem = (id) =>{\r\n    const product = getProduct.products.find(items => items.id === id);\r\n    return product;\r\n}\r\n\r\n \r\nconst handleDetail = (id) =>{\r\n    const product = getItem(id);\r\n    setGetProduct(()=>{\r\n        return {...getProduct, detailProduct: product}\r\n    });\r\n}\r\nconst addToCart = (id) =>{\r\n    let tempProducts = [...getProduct.products];\r\n    const index = tempProducts.indexOf(getItem(id));\r\n    const product = tempProducts[index];\r\n    product.inCart = true;\r\n    product.count = 1;\r\n    const price = product.price;\r\n    product.total = price;\r\n\r\n    sendCartItemToServer(product, tempProducts)\r\n    \r\n    // setGetProduct(()=>{\r\n    //     return {...getProduct, products: tempProducts, cart: [...getProduct.cart, product]}\r\n        \r\n    // });\r\n   \r\n  \r\n}\r\n\r\nconst CartTotal = () =>{\r\n    const sumValue = [...getProduct.cart]\r\n    const arrayOfCartTotal = sumValue.map(val => val.total)\r\n    const sum = arrayOfCartTotal.reduce((a,b) => a + b, 0)\r\n\r\n    return setGetProduct(() =>{\r\n        return {...getProduct, sumTotal: sum}\r\n    })\r\n\r\n    \r\n\r\n}\r\n\r\n\r\nconst openModal = id =>{\r\n    const product = getItem(id);\r\n\r\n    let tempProducts = [...getProduct.products];\r\n    const index = tempProducts.indexOf(getItem(id));\r\n    let cartProduct = tempProducts[index];\r\n    cartProduct.inCart = true;\r\n    cartProduct.count = 1;\r\n    const price = cartProduct.price;\r\n    cartProduct.total = price;\r\n\r\n\r\n    return setGetProduct(()=>{\r\n        return {...getProduct, modalProduct: product, modalOpen: true, products: tempProducts, cart:[...getProduct.cart, cartProduct]}\r\n    })\r\n}\r\nconst closeModal = () =>{\r\n\r\n    const sumValue = [...getProduct.cart]\r\n    const arrayOfCartTotal = sumValue.map(val => val.total);\r\n    const sum = arrayOfCartTotal.reduce((a,b) => a + b);\r\n    setGetProduct(()=>{\r\n        return {...getProduct, modalOpen: false, sumTotal: sum}\r\n    })\r\n}\r\n\r\n\r\nconst incrementQuantity = (id) =>{\r\n    let tempProduct = [...getProduct.products]\r\n    const index = tempProduct.indexOf(getItem(id))\r\n    const product = tempProduct[index]\r\n    \r\n    product.count = product.count + 1\r\n    product.total = product.price * product.count\r\n    \r\n    const sumValue = [...getProduct.cart]\r\n    const arrayOfCartTotal = sumValue.map(val => val.total)\r\n    const sum = arrayOfCartTotal.reduce((a,b) => a + b)\r\n    \r\n    setGetProduct(()=>{\r\n        return {...getProduct, cart: [...getProduct.cart], sumTotal: sum}\r\n    });\r\n    \r\n    \r\n\r\n}\r\n\r\nconst deleteFromCart = (id) =>{\r\n    const removeItem = getProduct.cart.filter(prod => prod.id !== id);\r\n\r\n    const tempProduct = [...getProduct.cart]\r\n    const index = tempProduct.indexOf(getItem(id))\r\n    const product = tempProduct[index];\r\n\r\n    product.inCart = false;\r\n\r\n    const sumValue = [...removeItem]\r\n    const arrayOfCartTotal = sumValue.map(val => val.total);\r\n    const sum = arrayOfCartTotal.reduce((a,b) => a + b, 0);\r\n\r\n    console.log(removeItem);\r\n    setGetProduct(() =>{\r\n        return {...getProduct, cart: [...removeItem], sumTotal: sum }\r\n    });\r\n\r\n\r\n}\r\n\r\nconst decrementQuantity = (id) =>{\r\n    const tempProduct = [...getProduct.products]\r\n    const index = tempProduct.indexOf(getItem(id));\r\n    const product = tempProduct[index];\r\n\r\n  \r\n        \r\n        product.count = product.count - 1\r\n        product.total = product.price * product.count;\r\n\r\n        // sum total \r\n\r\n        const sumValue = [...getProduct.cart]\r\n        const arrayOfCartTotal = sumValue.map(val => val.total);\r\n        const sum = arrayOfCartTotal.reduce((a,b) => a + b);\r\n\r\n        setGetProduct(() =>{\r\n            return {...getProduct, cart: [...getProduct.cart], sumTotal: sum}\r\n        })\r\n    \r\n    \r\n    if(product.count === 0){\r\n\r\n        deleteFromCart(id)\r\n    }\r\n\r\n\r\n}\r\n    return(\r\n       <ProductContext.Provider value={{\r\n           ...getProduct,\r\n           handleDetail: handleDetail,\r\n           addToCart: addToCart,\r\n           openModal: openModal,\r\n           closeModal: closeModal,\r\n           incrementQuantity: incrementQuantity,\r\n           decrementQuantity: decrementQuantity,\r\n           deleteFromCart: deleteFromCart,\r\n           CartTotal: CartTotal\r\n           \r\n       }} >\r\n           {children}\r\n       </ProductContext.Provider>\r\n    );\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductConsumer, ProductProvider}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// font-family: 'Lato', sans-serif;\r\n// font-family: 'Montserrat Alternates', sans-serif;\r\n// font-family: 'Sansita Swashed', cursive;\r\n\r\n\r\n\r\n","C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\App.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\data.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Details.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\ProductMenu.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Cart.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Navbar.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Modal.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\cartItems.js",[],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Product.js",[],["61","62"],"C:\\Users\\USER\\Desktop\\codingProject\\shop-for-clothes\\src\\components\\Button.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":26,"column":11,"nodeType":"69","messageId":"70","endLine":26,"endColumn":30},{"ruleId":"71","severity":1,"message":"72","line":123,"column":5,"nodeType":"73","endLine":123,"endColumn":7,"suggestions":"74"},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'fetchDataFromServer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveCartFromServer'. Either include it or remove the dependency array.","ArrayExpression",["79"],["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [retrieveCartFromServer]",{"range":"82","text":"83"},[2900,2902],"[retrieveCartFromServer]"]